<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--如果直接采用SpringMVC，只需要把所有相关配置放到xxx-servlet.xml中就OK了-->
    <!--dispatcher-servlet.xml 是spring mvc里面的-->

    <bean name="/hello" class="com.rongzi.controller.HelloController"></bean>

    <!--自动扫描 base-package 下面的 java 文件， 如果扫描到有Spring注解的类，将扫描到的类注册为 Spring 的bean-->
    <context:component-scan base-package="com.rongzi.controller"></context:component-scan>

    <!-- 该标签会自动注册HandlerMapping 和 HandlerAdapter 两个Bean, 这是@Controller分发请求必须的-->
    <!-- 该标签还会注册默认的 conversionService， 以满足大多数类型的转换，这里是要注册自定义的类型转换器-->
    <mvc:annotation-driven conversion-service="conversionService" />
    <!--自定义数据转换器-->
    <!--<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">-->
        <!--<property name="converters">-->
            <!--<list>-->
                <!--<bean class="com.rongzi.converter.StringToDateConverter"/>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--配置全局的自定义编辑器-->
    <!--注解类型的 处理器映射器-->
    <!--如果只配置HandlerAdapter，而不配置HandlerMapping，会提示No adapter for handler错误-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean>-->
    <!--注解类型的 处理器适配器-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
        <!--<property name="webBindingInitializer">-->
            <!--<bean class="com.rongzi.converter.DataBindingInitializer"></bean>-->
        <!--</property>-->
    <!--</bean>-->

    <!--自定义数据格式化-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatters">
            <list>
                <bean class="com.rongzi.formatter.DateFormatter">
                    <constructor-arg value="yyyy-MM-dd"/>
                </bean>
            </list>
        </property>
    </bean>

    <!--视图解析-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!--国际化， id="messageSource" 不能省略，也必须是 messageSource-->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames" value="strings"/>
    </bean>
    <!--国际化操作拦截器，如果采用基于 Session 、Cookie ， 必须配置-->
    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
    </mvc:interceptors>
    <!-- 语言区域解析器， 默认是 AcceptHeaderLocaleResolver-->
    <!--<bean class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver"/>-->
    <!--<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>-->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/>

</beans>